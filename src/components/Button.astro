---
interface Props {
  text: string;
  variant?: string;
  type?: "button" | "submit" | "reset" | null | undefined;
}

const { text, variant = "primary", type } = Astro.props;
---

<button class={variant} type={type}>{text}<span></span></button>

<style>
  button {
    height: fit-content;
    width: fit-content;
    font-size: 1rem;
    position: relative;
    overflow: hidden;
    transition: all 400ms;
    text-transform: uppercase;
    font-family: "Drogowskaz";
    padding: 0.5rem 1rem 0.5rem 1rem;
    border: 0;
    cursor: pointer;
    box-sizing: border-box;
  }

  button.primary {
    background-color: #19150a;
    color: #f8f5ed;
    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0);
  }

  button.secondary {
    background-color: transparent;
    color: #19150a;
    border: solid #19150a;
  }

  button.text {
    background-color: transparent;
    color: inherit;
    padding: 0;
    text-align: start;
  }

  button.primary span,
  button.secondary span {
    position: absolute;
    border-radius: 50%;
    transform: scale(0);
    animation: ripple 600ms linear;
    background-color: rgb(71, 209, 175);
    color: rgb(71, 209, 175);
  }

  button.primary:hover,
  button.primary:focus {
    color: rgb(71, 209, 175);
    box-shadow: 0 0 0.5rem 0.1rem rgb(71, 209, 175);
  }
</style>

<script>
  import { createRipple } from "../../lib/functions";

  const buttons = document.querySelectorAll("button");
  for (const button of buttons) {
    button.addEventListener("click", createRipple);
  }
</script>
